/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.80
 * Generated at: 2023-11-21 03:48:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.a3;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import com.mysql.jdbc.Driver;

public final class showBook_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.mysql.jdbc.Driver");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("s\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	String driverName="com.mysql.jdbc.Driver";
	String dbUrl = "jdbc:mysql://localhost:3306/book";
	String userName="root";
	String pass="";	
	Connection con=null;
	Statement stmt=null;
	ResultSet rs=null;
	String bookName=null;
	try{
	//request.setCharacterEncoding("utf-8");
	bookName=request.getParameter("name");
	byte b[]=bookName.getBytes("iso-8859-1");
	bookName=new String(b,"utf-8");
	Class.forName(driverName);//加载驱动
	con=DriverManager.getConnection(dbUrl, userName, pass);//得到连接对象
	stmt=con.createStatement();
	String sql="select * from book_info";
	if(bookName!=null&&bookName.length()>0){
	sql+=" where book_name LIKE  '%"+bookName+"%'";
	}		
	rs=stmt.executeQuery(sql);
	rs.last();
	//rs.first();
	//rs.absolute(2);
	out.print(rs.getString("book_name"));
	}catch(Exception e){
		out.print(e.getMessage());
	}

      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("	数据库表共有：<font size=\"4\" color=\"red\">\r\n");
      out.write("	");
      out.print(rs.getRow());
      out.write("\r\n");
      out.write("	</font>\r\n");
      out.write("	条记录<br>\r\n");
      out.write("	您查询的图书是：");
      out.print(bookName );
      out.write(">\r\n");
      out.write("	<table border=\"1\" bordercolor=\"#FF0000\" bgcolor=\"#EFEFEF\" width=\"400\">\r\n");
      out.write("	<tr>\r\n");
      out.write("	<td><b>ID</b></td><td><b>书名</b></td>\r\n");
      out.write("	<td><b>价格</b></td><td><b>库存</b></td>\r\n");
      out.write("	<td><b>作者</b></td><td><b>图书简介</b></td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	\r\n");
      out.write("	");

		rs.beforeFirst();//将游标移到第一条记录前
		while(rs.next()){
			
      out.write("\r\n");
      out.write("	<tr align=\"center\">\r\n");
      out.write("	<td><b>");
      out.print(rs.getInt(1));
      out.write("</b></td><td><b>");
      out.print(rs.getString(2));
      out.write("</b></td>\r\n");
      out.write("	<td><b>");
      out.print(rs.getString("price"));
      out.write("</b></td><td><b>");
      out.print(rs.getString("stock"));
      out.write("</b></td>\r\n");
      out.write("	<td><b>");
      out.print(rs.getString(5));
      out.write("</b></td><td><b>");
      out.print(rs.getString(6));
      out.write("</b></td>\r\n");
      out.write("	</tr>\r\n");
      out.write("			");

		}
		rs.close();
		stmt.close();
		con.close();
	
      out.write("\r\n");
      out.write("	</table>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
